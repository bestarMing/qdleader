import{_ as e,c as n,a,o as i}from"./app-CjvLLpCW.js";const t={};function l(p,s){return i(),n("div",null,s[0]||(s[0]=[a(`<h2 id="初始化项目" tabindex="-1"><a class="header-anchor" href="#初始化项目"><span>初始化项目</span></a></h2><p>新建qdleader-cli 文件夹 进入文件夹</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">npm</span> init <span class="token parameter variable">-y</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在 demo 下创建 bin 文件夹，并在里面创建 node 入口文件 enter</p><p>编辑 enter 文件，并将其配置到 package.json 中的 bin 字段</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token shebang important">#! /usr/bin/env node</span></span>
<span class="line">console.log<span class="token punctuation">(</span><span class="token string">&quot;hello demo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token comment">// package.json</span></span>
<span class="line"><span class="token comment">// bin 字段也支持对象模式配置</span></span>
<span class="line"><span class="token property">&quot;bin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bin/enter&quot;</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>npm link 到全局</p><p>在 demo 文件目录下运行 npm link 将项目链接到本地环境，就可以临时实现 demo 指令全局调用。(--force 参数可以强制覆盖原有指令)</p><p>运行 qdleader-cli 命令，命令行成功打印出 hello demo。 demo 项目配置成功。</p>`,10)]))}const o=e(t,[["render",l]]),c=JSON.parse('{"path":"/%E5%B7%A5%E7%A8%8B%E5%8C%96/%E8%84%9A%E6%89%8B%E6%9E%B6/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%9A%84%E8%84%9A%E6%89%8B%E6%9E%B6.html","title":"","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1749193496000,"contributors":[{"name":"bestarMing","username":"bestarMing","email":"49470216+bestarMing@users.noreply.github.com","commits":1,"url":"https://github.com/bestarMing"}],"changelog":[{"hash":"2ce8af76d22c8efad6164db81ee3aedf5f03b58b","time":1749193496000,"email":"49470216+bestarMing@users.noreply.github.com","author":"bestarMing","message":"Update deploy-vuepress.yml"}]},"filePathRelative":"工程化/脚手架/搭建自己的的脚手架.md"}');export{o as comp,c as data};
