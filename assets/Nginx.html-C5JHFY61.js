import{_ as e,c as n,a as t,o as s}from"./app-CjvLLpCW.js";const i={};function r(h,a){return s(),n("div",null,a[0]||(a[0]=[t('<h2 id="nginx反向代理与负载均衡" tabindex="-1"><a class="header-anchor" href="#nginx反向代理与负载均衡"><span>Nginx反向代理与负载均衡</span></a></h2><h3 id="什么是反向代理" tabindex="-1"><a class="header-anchor" href="#什么是反向代理"><span>什么是反向代理</span></a></h3><p>当我们有一个服务器集群，并且服务器集群中的每台服务器的内容一样的时候，同样我们要直接从个人电脑访问到服务器集群服务器的时候无法访问，必须通过第三方服务器才能访问集群 这个时候，我们通过第三方服务器访问服务器集群的内容，但是我们并不知道是哪一台服务器提供的内容，此种代理方式称为反向代理</p><h3 id="什么是负载均衡" tabindex="-1"><a class="header-anchor" href="#什么是负载均衡"><span>什么是负载均衡</span></a></h3><p>公司会建立很多的服务器，这些服务器组成了服务器集群，然后，当用户访问网站的时候，先访问一个中间服务器，再让这个中间服务器在服务器集群中选择一个压力较小的服务器，然后将该访问请求引入选择的服务器 所以，用户每次访问，都会保证服务器集群中的每个服务器压力趋于平衡，分担了服务器压力，避免了服务器崩溃的情况 一句话：nginx会给你分配服务器压力小的去访问</p><h3 id="nginx反向代理与负载均衡的实现" tabindex="-1"><a class="header-anchor" href="#nginx反向代理与负载均衡的实现"><span>Nginx反向代理与负载均衡的实现</span></a></h3><p>用户访问网站的时候首先会访问nginx服务器，然后nginx服务器再从服务器集群中选择压力较小的服务器，将该访问请求引向该服务器</p>',7)]))}const c=e(i,[["render",r]]),g=JSON.parse('{"path":"/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E5%89%8D%E7%AB%AF%E8%A6%81%E6%87%82%E5%BE%97%E9%83%A8%E5%88%86Nginx/Nginx.html","title":"","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1749193496000,"contributors":[{"name":"bestarMing","username":"bestarMing","email":"49470216+bestarMing@users.noreply.github.com","commits":1,"url":"https://github.com/bestarMing"}],"changelog":[{"hash":"2ce8af76d22c8efad6164db81ee3aedf5f03b58b","time":1749193496000,"email":"49470216+bestarMing@users.noreply.github.com","author":"bestarMing","message":"Update deploy-vuepress.yml"}]},"filePathRelative":"服务端/前端要懂得部分Nginx/Nginx.md"}');export{c as comp,g as data};
